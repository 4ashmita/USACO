import java.util.*;

public class hoofball {
    static int[] pos;
    static int N;
    public static int target(int i){
        int left = -1;
        int leftDist = 1000;
        int right = -1;
        int rightDist = 1000;
        for(int j = 0; j < N; j++){
            if (pos[j] < pos[i] && pos[i]-pos[j] < leftDist){
                left = j;
                leftDist = pos[i] - pos[j];
            }
        }
        for(int j = 0; j < N; j++){
            if (pos[j] > pos[i] && pos[j]-pos[i] < rightDist){
                right = j;
                rightDist = pos[j] - pos[i];
            }
        }
        if(leftDist <= rightDist){
            return left;
        }
        return right;
    }
    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        N = scan.nextInt();
        pos = new int[N];
        int[] passto = new int[100];
        for(int i = 0; i < N; i++){
            pos[i] = scan.nextInt();
        }
        for(int i = 0; i < N; i++){
            passto[target(i)] += 1;
        }
        Arrays.sort(pos);
        int counter = 0;
        for(int i = 0; i < N; i++){
            if(passto[i] == 0){
                counter += 1;
            }
            if( i < target(i) && target(target(i)) == i && passto[i] == i && passto[target(i)] == 1){
                counter += 1;
            }
        }
        System.out.println(counter);
    }
}
