import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;
import java.lang.Math;

class marathon {
    public static int[][] type(int[][] a, int n, int count){
        int[][] newA = new int[n][2];
        int counter = 0;
        for(int i = 0; i < a.length; i++){
            if(i == count){
                continue;
            }
            else{
                for(int j = 0; j < 2; j++){
                    newA[counter][j] = a[i][j];
                }
                counter += 1;
            }
        }
        return newA;
    }
    public static int totalDistance(int x1, int y1, int x2, int y2){
        int xTotal = Math.abs(x1 - x2);
        int yTotal = Math.abs(y1 - y2);
        int total = xTotal+yTotal;
        return total;
    }
    public static void main(String[] args) throws FileNotFoundException {
        for (int l = 1; l <= 10; l++) {
            String inputFile = String.valueOf(l) + "" + ".in";
            String outputFile = String.valueOf(l) + "" + ".out";
            File file = new File("marathon_bronze/" + inputFile);
            Scanner sc = new Scanner(file);
            sc.useDelimiter("\\z");
            int N = Integer.valueOf(sc.nextLine());
            int[][] checkpoints = new int[N][2];
            for (int i = 0; i < N; i++) {
                String[] A = sc.nextLine().split(" ");
                for (int j = 0; j < 2; j++) {
                    checkpoints[i][j] = Integer.parseInt(A[j]);
                }
            }
            int total = 0;
            int distance;

            for (int i = 0; i < N; i++) {
                if (i < N - 1) {
                    distance = totalDistance(checkpoints[i][0], checkpoints[i][1], checkpoints[i + 1][0], checkpoints[i + 1][1]);
                    total += distance;
                } else {
                    break;
                }
            }

            int dist = 0;
            int[][] newC;
            for (int i = 1; i < N - 1; i++) {
                newC = type(checkpoints, N - 1, i);
                for (int j = 0; j < N - 1; j++) {
                    if (j < N - 2) {
                        distance = totalDistance(newC[j][0], newC[j][1], newC[j + 1][0], newC[j + 1][1]);
                        dist += distance;
                    } else {
                        break;
                    }
                }
                if (dist < total) {
                    total = dist;
                }
                dist = 0;
            }
            file = new File("marathon_bronze/" + outputFile);
            sc = new Scanner(file);
            String test = sc.nextLine();
            int test1 = Integer.parseInt(test);
            if(test1 == total){
                System.out.println("PASS");
                System.out.println(total);
            }
            else{
                System.out.println("FAIL");
                System.out.println(total);
            }

        }
    }
}
